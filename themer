#!/bin/bash

set -eo pipefail

config="$HOME/.config/themer"
build="$config/.build"

pre (){

  if [ ! -d "$config" ]; then
    alert "Error!" "themer does not seem to be installed, please run the install script first!" && exit 1
  fi

  source $config/themer.conf

  if [ ! -d "$bgDir" ]; then
    echo "background image firectory not found" && exit 1
  fi

  # Required
  for cmd in sxiv feh wal; do
    command -v "$cmd" || alert "Error!" "$cmd is not installed"
  done
  # Optional
  for cmd in dwm dunst dmenu firefox qutebrowser; do
    if ! command -v "$cmd" >/dev/null 2>&1; then
      declare "$cmd="
    fi
  done
}

selectImage (){
  bgImage="$(sxiv -o -r -t $bgDir)"
  if [ -z "$bgImage" ]; then 
    alert "Oops!" "No image selcted, exitting.." && exit 1; 
  fi
}

setWallpaper (){
  feh --bg-fill --no-xinerama "$1"
}

createColorscheme () {
  wal -i "$bgImage"
}

buildSuckless() {
  workDir="$(pwd)"
  cd $dwm && sudo make clean install
  cd $dmenu && sudo make clean install
  cd "$workDir"
}

setXresources () {
  cat ~/.cache/wal/colors.Xresources > ~/.Xresources && xrdb ~/.Xresources
}

setDunst () {
  cp -f "$HOME/.cache/wal/dunstrc" "$dunst"
}

reloadWindowmanager () {
  kill -HUP $(pidof dwm)
}

firefoxCSS () {
  #check if multiple user profiles exists
  if [[ $(find $HOME/.mozilla/firefox/ -type d -iname "*.default" | wc -l) -gt 1 ]]; then
    alert "Alert!" "there seem to be multiple user directories for firefox, please pick which one to use"
    folder="$(find $HOME/.mozilla/firefox/ -type d -iname "*.default" | dmenu -l 10)"
    if [ "$folder" = "" ]; then exit 1 ;fi 
  elif [[ $(find $HOME/.mozilla/firefox/ -type d -iname "*.default" | wc -l) -eq 1 ]]; then
    folder=$(echo "$HOME"/.mozilla/firefox/*.default)
  fi

  if [ ! -d  "$folder/chrome" ]; then
     mkdir -p "$folder/chrome"
     echo "chrome folder created."
  fi

  cp -f "$build/firefox/userContent.css" "$folder/chrome"
  cp -f "$build/firefox/userChrome.css" "$folder/chrome"

   local chrome="$(echo $folder/chrome/userChrome.css)"
   local content="$(echo $folder/chrome/userContent.css)"
  
   if [[ $(head -n 1 "$chrome" | grep -c "/* CSS variables") -eq 1 ]]; then
     sed -i 1,28d "$chrome"
     tmpfile=$(mktemp)
     cat "$HOME/.cache/wal/colors.css" "$chrome" > "$tmpfile" && mv "$tmpfile" "$chrome"
   fi
  
   if [[ $(head -n 1 "$content" | grep -c "/* CSS variables") -eq 1 ]]; then
     sed -i 1,28d "$content"
     tmpfile=$(mktemp)
     cat "$HOME/.cache/wal/colors.css" "$content" > "$tmpfile" && mv "$tmpfile" "$content"
   fi

}

qutebrowserCSS (){
  command -v qutebrowser 1>/dev/null || { echo "Qutebrowser not installed, skipping..."; return 1; }
  if [[ $(cat $HOME/.config/qutebrowser/config.py | grep -c "import pywalQute.draw") -eq 1 ]]; then
    echo "Plugin already installed, skipping... checking if pywalQute folder exsist"
  fi
  if [ -d "$HOME/.config/qutebrowser/pywalQute/" ]; then
    alert "Done!" "Qutebrowser was allready had the wal plugin installed" &&  return 1
  elif [ ! -d .config/qutebrowser/pywalQute/ ]; then
    cp -r "$build/pywalQute" "$HOME/.config/qutebrowser/"
  fi
  cat "$build/pywalQute/snippet" >> "$HOME/.config/qutebrowser/config.py"
}

alert (){
  notify-send --icon="$3" "$1" "$2"
}

pre 
selectImage
createColorscheme && alert "Done!" "Colorscheme is set"
buildSuckless && alert "Suckless build suckessfully." 
setDunst && alert "Done!" "Dunst set succesfully."
setXresources && alert "Done!" "Xresources set succesfully."
firefoxCSS && alert "Done!" "Firefox CSS set succesfully."
qutebrowserCSS &&  alert "Done!" "Qutebrowser CSS set succesfully."
setWallpaper "$bgImage" && alert "Done!" "Background image is set" "$bgImage"
reloadWindowmanager
